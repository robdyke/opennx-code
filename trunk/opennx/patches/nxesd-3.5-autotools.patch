diff -urw nxesd-orig/configure.ac nxesd/configure.ac
--- nxesd-orig/configure.ac	2007-05-29 12:06:31.000000000 +0200
+++ nxesd/configure.ac	2011-05-21 12:33:28.403434748 +0200
@@ -7,7 +7,7 @@
 ESD_VERSION=$ESD_MAJOR_VERSION.$ESD_MINOR_VERSION.$ESD_MICRO_VERSION
 
 AC_CANONICAL_TARGET([])
-AM_INIT_AUTOMAKE(1.6)
+AM_INIT_AUTOMAKE([foreign])
 AM_MAINTAINER_MODE
 
 AM_CONFIG_HEADER(config.h)
diff -urw nxesd-orig/m4/as-arts.m4 nxesd/m4/as-arts.m4
--- nxesd-orig/m4/as-arts.m4	2007-05-29 12:06:29.000000000 +0200
+++ nxesd/m4/as-arts.m4	2011-05-21 12:31:52.411634866 +0200
@@ -1,43 +1,23 @@
-dnl as-arts.m4 0.1.0
-
-dnl $Id: as-arts.m4,v 1.1 2005/01/18 07:28:04 ds Exp $
-dnl if you copy this file to your cvs,
-dnl add this file using cvs -ko add to retain this header
-
-dnl This is an example arts .m4 adapted and scrubbed by thomasvs
+dnl This should be pulled in from arts.m4
+dnl
+dnl Oh my word, I've never hacked automake before - let me know if this is a
+dnl complete rubbish!
+dnl Peter L Jones 2002-05-12
+dnl Snarfed from the ESD code below - but the faults are all mine!
 
-# Configure paths for ARTS
-# Philip Stadermann   2001-06-21
-# stolen from esd.m4
 
 dnl AM_PATH_ARTS([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
-dnl Test for ARTS, and define ARTS_CXXFLAGS and ARTS_LIBS
+dnl Test for aRts, and define ARTS_CFLAGS and ARTS_LIBS
 dnl
 AC_DEFUN([AM_PATH_ARTS],
 [dnl 
-dnl Get the cflags and libraries from the artsc-config script
+dnl Get the cflags and libraries from the arts-config script
 dnl
-AC_ARG_WITH(arts-prefix,
-  AC_HELP_STRING([--with-arts-prefix=PFX],
-                 [prefix where ARTS is installed (optional)]),
+AC_ARG_WITH(arts-prefix,[  --with-arts-prefix=PFX   Prefix where ARTS is installed (optional)],
   arts_prefix="$withval", arts_prefix="")
-
-AC_ARG_WITH(arts-exec-prefix,
-  AC_HELP_STRING([--with-arts-exec-prefix=PFX],
-                 [exec prefix where ARTS is installed (optional)]),
-  arts_exec_prefix="$withval", arts_exec_prefix="")
-
-AC_ARG_ENABLE(artstest, 
-  AC_HELP_STRING([--disable-artstest],
-                 [do not try to compile and run a test ARTS program]),
+AC_ARG_ENABLE(artstest, [  --disable-artstest       Do not try to compile and run a test ARTS program],
   , enable_artstest=yes)
 
-  if test x$arts_exec_prefix != x ; then
-    arts_args="$arts_args --exec-prefix=$arts_exec_prefix"
-    if test x${ARTS_CONFIG+set} != xset ; then
-      ARTS_CONFIG=$arts_exec_prefix/bin/artsc-config
-    fi
-  fi
   if test x$arts_prefix != x ; then
     arts_args="$arts_args --prefix=$arts_prefix"
     if test x${ARTS_CONFIG+set} != xset ; then
@@ -47,15 +27,13 @@
 
   AC_PATH_PROG(ARTS_CONFIG, artsc-config, no)
   min_arts_version=ifelse([$1], ,0.9.5,$1)
-  AC_MSG_CHECKING(for ARTS artsc - version >= $min_arts_version)
+  AC_MSG_CHECKING(for ARTS - version >= $min_arts_version)
   no_arts=""
   if test "$ARTS_CONFIG" = "no" ; then
     no_arts=yes
   else
-    # FIXME: thomas added this sed to get arts path instead of artsc
-    # replace -I.../artsc with -I.../arts
-    ARTS_CXXFLAGS=`$ARTS_CONFIG $artsconf_args --cflags | artsc-config --cflags | sed 's/\(-I.*\)artsc/\1arts/'`
-    ARTS_LIBS=`$ARTS_CONFIG $artsconf_args --libs | sed 's/artsc$/arts/'`
+    ARTS_CFLAGS=`$ARTS_CONFIG $artsconf_args --cflags`
+    ARTS_LIBS=`$ARTS_CONFIG $artsconf_args --libs`
 
     arts_major_version=`$ARTS_CONFIG $arts_args --version | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
@@ -64,38 +42,20 @@
     arts_micro_version=`$ARTS_CONFIG $arts_config_args --version | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
     if test "x$enable_artstest" = "xyes" ; then
-      dnl ac_save_CXXFLAGS="$CXXFLAGS"
-      dnl ac_save_LIBS="$LIBS"
-      dnl CFLAGS="$CFLAGS $ARTS_CXXFLAGS"
-      dnl LIBS="$LIBS $ARTS_LIBS"
+      ac_save_CFLAGS="$CFLAGS"
+      ac_save_LIBS="$LIBS"
+      CFLAGS="$CFLAGS $ARTS_CFLAGS"
+      LIBS="$LIBS $ARTS_LIBS"
 dnl
 dnl Now check if the installed ARTS is sufficiently new. (Also sanity
-dnl checks the results of artsc-config to some extent)
+dnl checks the results of arts-config to some extent
 dnl
-
-dnl a*s: to successfully compile the C++ test app, we need to 
-dnl first make sure we're going to compile it as C++ (with AC_LANG_PUSH),
-dnl then add the CFLAGS and CLIBS of arts which we just discovered to the
-dnl C++ compilation and linking flags.
-dnl We also need to clean up after the test; this means using AC_LANG_POP
-dnl and restoring the CPPFLAGS and LDFLAGS from the saved values we take 
-dnl here.
-
-dnl ask nicely for C++ compilation
-      AC_LANG_PUSH(C++)
-
-dnl save compilation and link flags and make our own
-      ac_save_CPPFLAGS="$CPPFLAGS"
-      ac_save_LDFLAGS="$LDFLAGS"
-      AC_SUBST(CPPFLAGS,"$CPPFLAGS $ARTS_CXXFLAGS")
-      AC_SUBST(LDFLAGS,"$LDFLAGS $ARTS_CLIBS")
- 
       rm -f conf.artstest
       AC_TRY_RUN([
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <artsflow.h>
+#include <artsc.h>
 
 char*
 my_strdup (char *str)
@@ -104,8 +64,7 @@
   
   if (str)
     {
-      // thomas: the original test did not have the typecast
-      new_str = (char *) malloc ((strlen (str) + 1) * sizeof(char));
+      new_str = malloc ((strlen (str) + 1) * sizeof(char));
       strcpy (new_str, str);
     }
   else
@@ -147,15 +106,8 @@
 }
 
 ],, no_arts=yes,[echo $ac_n "cross compiling; assumed OK... $ac_c"])
-      dnl CFLAGS="$ac_save_CFLAGS"
-      dnl LIBS="$ac_save_LIBS"
-      dnl a*s this is were we clean up after the test
-      AC_LANG_POP(C++)
-      CXXFLAGS="$ac_save_CXXFLAGS"
-      LDFLAGS="$ac_save_LDFLAGS"
-      dnl a*s we are sure that these are right, so we make them active
-      AC_SUBST(CXXFLAGS,"$CXXFLAGS")
-      AC_SUBST(LDFLAGS,"$LDFLAGS")
+       CFLAGS="$ac_save_CFLAGS"
+       LIBS="$ac_save_LIBS"
     fi
   fi
   if test "x$no_arts" = x ; then
@@ -173,11 +125,11 @@
         :
       else
          echo "*** Could not run ARTS test program, checking why..."
-         CFLAGS="$CFLAGS $ARTS_CXXFLAGS"
+          CFLAGS="$CFLAGS $ARTS_CFLAGS"
          LIBS="$LIBS $ARTS_LIBS"
          AC_TRY_LINK([
 #include <stdio.h>
-#include <artsflow.h>
+#include <artsc.h>
 ],      [ return 0; ],
         [ echo "*** The test program compiled, but did not run. This usually means"
           echo "*** that the run-time linker is not finding ARTS or finding the wrong"
@@ -191,19 +143,17 @@
         [ echo "*** The test program failed to compile or link. See the file config.log for the"
           echo "*** exact error that occured. This usually means ARTS was incorrectly installed"
           echo "*** or that you have moved ARTS since it was installed. In the latter case, you"
-          echo "*** may want to edit the artsc-config script: $ARTS_CONFIG" ])
+          echo "*** may want to edit the arts-config script: $ARTS_CONFIG" ])
           CFLAGS="$ac_save_CFLAGS"
           LIBS="$ac_save_LIBS"
       fi
     fi
-    ARTS_CXXFLAGS=""
+     ARTS_CFLAGS=""
     ARTS_LIBS=""
     ifelse([$3], , :, [$3])
   fi
-  AC_SUBST(ARTS_CXXFLAGS)
+  AC_SUBST(ARTS_CFLAGS)
   AC_SUBST(ARTS_LIBS)
   rm -f conf.artstest
 ])
-
-dnl release C++ question
-
+dnl End of aRts
diff -urw nxesd-orig/Makefile.am nxesd/Makefile.am
--- nxesd-orig/Makefile.am	2007-05-29 12:06:31.000000000 +0200
+++ nxesd/Makefile.am	2011-05-21 12:30:50.631407225 +0200
@@ -12,6 +12,10 @@
 ESDDSP = esddsp
 libesddsp_la = libesddsp.la
 endif
+if BUILD_NXESDDSP
+NXESDDSP = nxesddsp
+libesddsp_la = libesddsp.la
+endif
 if BUILD_ESDPLAY
 ESDPLAY = esdplay
 endif
@@ -24,6 +28,7 @@
 
 bin_SCRIPTS = \
 	$(ESDDSP)	\
+	$(NXESDDSP)	\
 	esd-config
 
 lib_LTLIBRARIES = libesd.la $(libesddsp_la)
@@ -72,7 +77,7 @@
 esddir = @ESD_DIR@
 
 esd_PROGRAMS = \
-	esd		
+	nxesd		
 
 bin_PROGRAMS = \
 	esdcat		\
@@ -84,7 +89,7 @@
 	esdloop		\
 	$(ESDPLAY)
 
-esd_SOURCES = 	\
+nxesd_SOURCES = 	\
 	esd.c 		\
 	clients.c	\
 	filter.c	\
@@ -125,7 +130,7 @@
 
 LDADD = libesd.la $(AUDIOFILE_LIBS)
 
-esd_LDADD = $(WRAP_LIB) $(LDADD)
+nxesd_LDADD = $(WRAP_LIB) $(LDADD)
 
 m4datadir = $(datadir)/aclocal
 m4data_DATA = esd.m4
@@ -145,6 +150,7 @@
 EXTRA_DIST = \
 	$(getopt_extra)	\
 	esddsp		\
+	nxesddsp	\
 	esound.pc.in	\
 	esound.spec	\
 	esound.spec.in	\
