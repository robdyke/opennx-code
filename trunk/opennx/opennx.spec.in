%define version @VERSION@
%define svnrev @SVNREV@

# Build-time configuration
# use wxWidgets debug libs
%define with_debug %{?_with_debug: 1} %{?!_with_debug: 0}
# use wxWidgets static libs
%define with_staticwx %{?_with_staticwx: 1} %{?!_with_staticwx: 0}
# Enable USBIP support
%define with_usbip %{?_with_usbip: 1} %{?!_with_usbip: 0}
# Make recommended RPM dependencies mandatory
%define with_forceopt %{?_with_forceopt: 1} %{?!_with_forceopt: 0}

# Caution:
# Using --with fetchnx triggers downloading the latest
# tarballs from NoMachine. This does *not* work in common
# jailed build-environments (like Suse BuildService)
%define with_fetchnx %{?_with_fetchnx: 1} %{?!_with_fetchnx: 0}

##
## OS detection
##
%define is_rh %(test -n "`echo %{?dist}|grep rh`" && echo 1 || echo 0)
%define is_fc 0%{?fedora}%{?fedora_version}
%define is_suse 0%{?suse_version}
%define is_sles 0%{?sles_version}
%define is_mdk %(test -e /etc/mandrake-release && echo 1 || echo 0)
%if %{is_rh}
%define ostag %{?dist}
%endif
%if %{is_mdk}
%define ostag .mdk%(rpm -q --queryformat='%{VERSION}' mandrake-release | perl -pe 's/(.).*/$1/')
%endif
%if %{is_fc}
%define ostag %{?dist}
%endif

%if %{is_sles}
%if %{sles_version} > 999
%define ostag .SLE%(echo %{sles_version}|sed -e 's/\\(..\\)\\(.\\)./\\1.\\2/')
%else
%define ostag .SLE%(echo %{sles_version}|sed -e 's/\\(.\\)\\(.\\)./\\1.\\2/')
%endif
%else
%if %{is_suse}
%if %{suse_version} > 999
%define ostag .SuSE%(echo %{suse_version}|sed -e 's/\\(..\\)\\(.\\)./\\1.\\2/')
%else
%define ostag .SuSE%(echo %{suse_version}|sed -e 's/\\(.\\)\\(.\\)./\\1.\\2/')
%endif
%endif
%endif

%define _prefix /opt/%{name}

%ifarch x86_64
%define nxlib %{_prefix}/lib64
%else
%define nxlib %{_prefix}/lib
%endif

%define nxdlurl http://www.nomachine.com/sources.php
%define nxpkgs nxcomp nxesd
%define nxpkgsall nxcomp nxesd nxssh

%define rel %{svnrev}%{ostag}

Summary: An OpenSource NX client
Name: opennx
Version: %{version}
Release: %{rel}
License: LGPL/GPL
Group: Applications/Internet
URL: http://sourceforge.net/projects/opennx
Source0: opennx-%{version}.tar.gz
%if !%{with_fetchnx}
Source100: nxcomp-3.3.0-4.tar.gz
Source101: nxesd-3.3.0-1.tar.gz
Source102: nxssh-3.3.0-1.tar.gz
%endif
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root

Obsoletes: nxclient
Provides: nxclient

%if %{is_suse}
# Workaround for https://bugzilla.novell.com/show_bug.cgi?id=436992
BuildRequires: -post-build-checks
%endif
BuildRequires: libtool
BuildRequires: automake
BuildRequires: audiofile-devel
BuildRequires: cups-devel
BuildRequires: opensc-devel
BuildRequires: libusb-devel
BuildRequires: libsmbclient-devel
%if %{is_suse}
BuildRequires: wxGTK-devel >= 2.8.0
%else
%if %{is_fc} > 10
BuildRequires: wxGTK-devel >= 2.8.0
%else
BuildRequires: wxGTK2-devel >= 2.8.0
%endif
BuildRequires: samba-common
BuildRequires: libXmu-devel
%endif
BuildRequires: xorg-x11-proto-devel
BuildRequires: xorg-x11-xtrans-devel
BuildRequires: gcc-c++
BuildRequires: zip
BuildRequires: libpng-devel
BuildRequires: libjpeg-devel
BuildRequires: zlib-devel
BuildRequires: openssl-devel
%if %{with_fetchnx}
BuildRequires: wget
%endif

Requires(post): xdg-utils
Requires(preun): xdg-utils
%if %{with_forceopt}
# The following are actually *not*
# required but *recommended*
%if %{is_suse}
# SMB sharing
Requires: libsmbclient0
# Printer sharing
Requires: cups-libs
# Smartcard support
Requires: libopensc2
Requires: libusb-0_1-4
%else
# SMB sharing
Requires: samba-common
# Printer sharing
Requires: cups-libs
# Smartcard support
Requires: opensc
Requires: libusb
%endif
%if %{with_usbip}
Requires: usbip2-nxclient
%endif
%endif

%description
opennx is an OSS replacement for Nomachine's NX client.

%prep
%if %{with_fetchnx}
%setup -q
./getnxsrcpkg %{nxpkgsall}
for pkg in %{nxpkgsall} ; do
    tar xzf ${pkg}-*.tar.gz
done
%else
%setup -q -a 100 -a 101 -a 102
%endif

# Apply openssh askPIN patch (see https://bugzilla.mindrot.org/show_bug.cgi?id=608)
cd nxssh && patch -p1 < ../patches/openssh-scard-pin.patch
cd ..
patch -p0 < patches/nxcomp-gcc44.patch
# Make nxssh load libopensc dynamically
patch -p0 < patches/nxssh-dynopensc.patch

%build
%configure \
%if %{with_staticwx}
    --enable-staticwx \
%else
    --disable-staticwx \
%endif
%if %{with_debug}
    --enable-debug \
%endif
%if %{with_usbip}
    --enable-usbip
%endif
make
for pkg in %{nxpkgs} ; do
	cd $pkg && ./configure --prefix=%{_prefix} && make
    cd ..
done
%if %{is_fc}
# On FC10, opensc-config is currently broken. It returns "-I" when
# called with the --cflags option, breaking ./configure. Therefore
# we provide a wrapper here.
cd nxssh
cat<<"EOF">opensc-config
#!/bin/sh
/usr/bin/opensc-config "$@"|perl -pe 's/-I\s//g'
EOF
chmod a+x opensc-config
export PATH=.:$PATH
./configure --prefix=%{_prefix} --with-opensc --enable-opensc-dynamic && make
%else
cd nxssh && ./configure --prefix=%{_prefix} --with-opensc --enable-opensc-dynamic && make
%endif
cd ..

%install
%makeinstall
%{__install} -d -m 755 %{buildroot}%{_libdir}
%{__install} -m 755 nxcomp/libXcomp.so.*.*.* %{buildroot}%{_libdir}
%{__install} -m 755 nxesd/nxesd %{buildroot}%{_bindir}
%{__install} -m 755 nxssh/nxssh %{buildroot}%{_bindir}
/sbin/ldconfig -n %{buildroot}%{_libdir}
%{__install} -d -m 755 %{buildroot}/usr/bin
ln -s %{_bindir}/opennx %{buildroot}/usr/bin/nxclient
%if %{with_usbip}
%{__install} -d -m 755 %{buildroot}%{_sysconfdir}/udev/rules.d
%{__install} -m 644 etc/*.rules %{buildroot}%{_sysconfdir}/udev/rules.d
%endif

%clean
%{__rm} -rf %{buildroot}

%triggerin -- opensc, libsmbclient, samba-common, libusb, libusb-0_1-4, cups-libs
# Create symlinks with plain .so extension under %{_prefix}/lib[64]
for lname in usb-0 opensc smbclient cups ; do
    LPATH=`/sbin/ldconfig -p|awk '/lib'$lname'[\.-]/ {print $4}'|head -1`
    if test -n "$LPATH" ; then
        blname=`echo $lname|sed -e 's/[-0-9]//g'`
        ln -snf $LPATH %{nxlib}/lib$blname.so
    fi
done

%if %{with_usbip}
%pre
if [ $1 = 1 ] ; then
    /usr/sbin/groupadd -r opennx || :
fi
%endif

%postun
if [ $1 = 0 ] ; then
%if %{with_usbip}
    /usr/sbin/groupdel opennx || :
%endif
    rm -f /usr/NX || :
fi

%post
# Create symlink to /usr/NX for compatibility to original
rm -rf /usr/NX
ln -snf %{_prefix} /usr/NX
# Create symlinks with plain .so extension under %{_prefix}/lib[64]
for lname in usb-0 opensc smbclient cups ; do
    LPATH=`/sbin/ldconfig -p|awk '/lib'$lname'[\.-]/ {print $4}'|head -1`
    if test -n "$LPATH" ; then
        blname=`echo $lname|sed -e 's/[-0-9]//g'`
        ln -snf $LPATH %{nxlib}/lib$blname.so
    fi
done

# Install icons
cd %{_datadir}/icons
SIZES="16 32 48 128 256"
ICINSTALL="xdg-icon-resource install --noupdate --novendor --mode system"
for sz in $SIZES ; do
    case $sz in
        scalable)
            subdir=$sz
            ext=svg
            ;;
        [0-9]*)
            subdir=${sz}x${sz}
            ext=png
            ;;
    esac
    for ctx in apps mimetypes ; do
        (
            cd $subdir/$ctx
            for f in *.$ext ; do
                $ICINSTALL --context $ctx --size $sz $f
            done
        )
    done
done
xdg-icon-resource forceupdate
# Install menu entries
cd %{_datadir}/applnk/xdg
xdg-desktop-menu install --mode system *.directory *.desktop

%preun
if [ $1 -gt 0 ] ; then
    exit 0
fi

rm -f %{nxlib}/libusb.so
rm -f %{nxlib}/libopensc.so
rm -f %{nxlib}/libsmbclient.so
rm -f %{nxlib}/libcups.so

# Uninstall menu entries
cd %{_datadir}/applnk/xdg
xdg-desktop-menu uninstall --mode system *.directory *.desktop
# Install icons
cd %{_datadir}/icons
SIZES="16 32 48 128 256"
ICREMOVE="xdg-icon-resource uninstall --noupdate --novendor --mode system"
for sz in $SIZES ; do
    case $sz in
        scalable)
            subdir=$sz
            ext=svg
            ;;
        [0-9]*)
            subdir=${sz}x${sz}
            ext=png
            ;;
    esac
    for ctx in apps mimetypes ; do
        (
            cd $subdir/$ctx
            for f in *.$ext ; do
                $ICREMOVE --context $ctx --size $sz `basename $f .$ext`
            done
        )
    done
done
xdg-icon-resource forceupdate

%files
%defattr(-, root, root, 0755)
%doc COPYING INSTALL ChangeLog
%_prefix
/usr/bin/nxclient
%if %{with_usbip}
%{_sysconfdir}/udev
%endif

%changelog
* Sun Apr 19 2009 Fritz Elfert <fritz@fritz-elfert.de>
- Set prefix to /opt/lsb/%{name} for FHS compliance
* Wed Apr 15 2009 Michael Kromer <michael.kromer@millenux.com>
- Fixes for SuSE Plattform (openSuSE/SLES)
* Sun Jan  7 2007 Fritz Elfert <fritz@fritz-elfert.de>
- Initial package
