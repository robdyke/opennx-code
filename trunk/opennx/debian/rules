#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

export CFLAGS = -Os
export CXXFLAGS = -Os

prefix = /usr/lib/opennx

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	$(MAKE) -f Makefile.am
	./configure --prefix=$(prefix) --datarootdir=/usr/share/opennx
	./getnxsrcpkg nxcomp nxcompsh nxesd nxproxy nxservice nxssh
	tar xzf nxcomp-*.tar.gz
	patch -p0 < patches/nxcomp-gcc44.patch
	cd nxcomp && ./configure --prefix=$(prefix)
	tar xzf nxcompsh-*.tar.gz
	cd nxcompsh && echo \#include \<iostream\> > iostream.h
	cd nxcompsh && echo using namespace std\; >> iostream.h
	cd nxcompsh && ./configure --prefix=$(prefix)
	tar xzf nxesd-*.tar.gz
	cd nxesd && ./configure --prefix=$(prefix)
	tar xzf nxproxy-*.tar.gz
	cd nxproxy && ./configure --prefix=$(prefix)
	tar xzf nxservice-*.tar.gz
	cd nxservice && ./configure --prefix=$(prefix)
	tar xzf nxssh-*.tar.gz
	cd nxssh && patch -p1 < ../patches/openssh-scard-pin.patch
	cd nxssh && ./configure --prefix=$(prefix) --with-opensc
	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp  
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)
	#docbook-to-man debian/opennx.sgml > opennx.1
	$(MAKE) -C nxcomp
	$(MAKE) -C nxcompsh CXXINCLUDES=-I.
	$(MAKE) -C nxesd
	$(MAKE) -C nxproxy
	$(MAKE) -C nxservice
	$(MAKE) -C nxssh
	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	$(RM) -r nxcomp* nxcompsh* nxesd* nxproxy* nxservice* nxssh*
	test ! -f Makefile || $(MAKE) maintainer-clean
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_prep  
	dh_installdirs

	# Add here commands to install the package into debian/opennx.
	$(MAKE) DESTDIR=$(CURDIR)/debian/opennx install
	cd debian/opennx/usr/bin && ln -s ../lib/opennx/bin/opennx nxclient
	cd debian/opennx/usr/lib/opennx && ln -s ../../share/opennx share
	cp -a nxcomp/libXcomp.so.3.*.* debian/opennx/usr/lib/opennx/lib
	cd debian/opennx/usr/lib/opennx/lib && ln -s libXcomp.so.3.*.* libXcomp.so.3
	cp -a nxcompsh/libXcompsh.so.3.*.* debian/opennx/usr/lib/opennx/lib
	cd debian/opennx/usr/lib/opennx/lib && ln -s libXcompsh.so.3.*.* libXcompsh.so.3
	cp -a nxesd/nxesd debian/opennx/usr/lib/opennx/bin
	cp -a nxproxy/nxproxy debian/opennx/usr/lib/opennx/bin
	cp -a nxservice/nxservice debian/opennx/usr/lib/opennx/bin
	cp -a nxssh/nxssh debian/opennx/usr/lib/opennx/bin
	cp -a etc/*.rules debian/opennx/etc/udev/rules.d

# Build architecture-independent files here.
binary-indep: install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps -l$(CURDIR)/debian/opennx/usr/lib/opennx/lib
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
