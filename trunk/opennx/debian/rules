#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
CROSS= --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
else
CROSS= --build $(DEB_BUILD_GNU_TYPE)
endif


export CFLAGS = -Os
export CXXFLAGS = -Os
prefix = /usr/lib/opennx

config.status: configure
	dh_testdir
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	./configure $(CROSS) --prefix=$(prefix) --datarootdir=/usr/share/opennx
	./getnxsrcpkg nxcomp nxcompsh nxesd nxproxy nxservice nxssh
	tar xzf nxcomp-*.tar.gz
	patch -p0 < patches/nxcomp-gcc44.patch
	cd nxcomp && ./configure --prefix=$(prefix)
	tar xzf nxcompsh-*.tar.gz
	cd nxcompsh && echo \#include \<iostream\> > iostream.h
	cd nxcompsh && echo using namespace std\; >> iostream.h
	cd nxcompsh && ./configure --prefix=$(prefix)
	tar xzf nxesd-*.tar.gz
	cd nxesd && ./configure --prefix=$(prefix)
	tar xzf nxproxy-*.tar.gz
	cd nxproxy && ./configure --prefix=$(prefix)
	tar xzf nxservice-*.tar.gz
	cd nxservice && ./configure --prefix=$(prefix)
	tar xzf nxssh-*.tar.gz
	cd nxssh && patch -p1 < ../patches/openssh-scard-pin.patch
	cd nxssh && patch -p1 < ../patches/nxssh-dynopensc.patch
	cd nxssh && ./configure --prefix=$(prefix) --with-opensc --enable-opensc-dynamic


build: build-stamp

build-stamp: config.status
	dh_testdir
	$(MAKE)
	$(MAKE) -C nxcomp
	$(MAKE) -C nxcompsh CXXINCLUDES=-I.
	$(MAKE) -C nxesd
	$(MAKE) -C nxproxy
	$(MAKE) -C nxservice
	$(MAKE) -C nxssh
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	test ! -f Makefile || $(MAKE) distclean
	rm -f config.sub config.guess
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	$(MAKE) DESTDIR=$(CURDIR)/debian/opennx install
	cd debian/opennx/usr/bin && ln -s ../lib/opennx/bin/opennx nxclient
	cd debian/opennx/usr/lib/opennx && ln -s ../../share/opennx share
	cp -a nxcomp/libXcomp.so.3.*.* debian/opennx/usr/lib/opennx/lib
	cd debian/opennx/usr/lib/opennx/lib && ln -s libXcomp.so.3.*.* libXcomp.so.3
	cp -a nxcompsh/libXcompsh.so.3.*.* debian/opennx/usr/lib/opennx/lib
	cd debian/opennx/usr/lib/opennx/lib && ln -s libXcompsh.so.3.*.* libXcompsh.so.3
	cp -a nxesd/nxesd debian/opennx/usr/lib/opennx/bin
	cp -a nxproxy/nxproxy debian/opennx/usr/lib/opennx/bin
	cp -a nxservice/nxservice debian/opennx/usr/lib/opennx/bin
	cp -a nxssh/nxssh debian/opennx/usr/lib/opennx/bin
	# USBIP only: cp -a etc/*.rules debian/opennx/etc/udev/rules.d
	cd debian/opennx/usr/lib/opennx/lib && ln -s /usr/lib/libcups.so.2 libcups.so
	cd debian/opennx/usr/lib/opennx/lib && ln -s /usr/lib/libopensc.so.2 libopensc.so
	cd debian/opennx/usr && ln -s lib/opennx NX
	cd debian/opennx/usr/share && mv opennx/applnk/network applications
	$(RM) debian/opennx/usr/share/applications/.directory
	$(RM) -r debian/opennx/usr/share/opennx/applnk


# Build architecture-independent files here.
binary-indep: install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps -l$(CURDIR)/debian/opennx/usr/lib/opennx/lib
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
